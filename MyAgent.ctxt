#BlueJ class context
comment0.params=
comment0.target=int\ rowFiveRedTokens()
comment0.text=\ncounts\ how\ many\ slots\ on\ the\ bottom\ row\ have\ red\ tokens\ in\ order\ to\ figure\ out\ if\ it\ is\ the\ first\ turn\n@return\ number\ of\ bottom\ row\ slots\ are\ filled\ with\ red\n
comment1.params=column\ row
comment1.target=boolean\ isOpen(int,\ int)
comment1.text=\n\ checks\ if\ specified\ slot\ is\ open\n\ @param\ column\ to\ see\ if\ specific\ row\ is\ filled\n\ @param\ row\ to\ see\ if\ specific\ column\ is\ filled\n\ @return\ if\ slot\ is\ open\n
comment10.params=
comment10.target=void\ move()
comment11.params=columnNumber
comment11.target=void\ moveOnColumn(int)
comment11.text=\n\ Drops\ a\ token\ into\ a\ particular\ column\ so\ that\ it\ will\ fall\ to\ the\ bottom\ of\ the\ column.\n\ If\ the\ column\ is\ already\ full,\ nothing\ will\ change.\n\ \n\ @param\ columnNumber\ The\ column\ into\ which\ to\ drop\ the\ token.\n
comment12.params=column
comment12.target=int\ getLowestEmptyIndex(Connect4Column)
comment12.text=\n\ Returns\ the\ index\ of\ the\ top\ empty\ slot\ in\ a\ particular\ column.\n\ \n\ @param\ column\ The\ column\ to\ check.\n\ @return\ the\ index\ of\ the\ top\ empty\ slot\ in\ a\ particular\ column;\ -1\ if\ the\ column\ is\ already\ full.\n
comment13.params=
comment13.target=int\ randomMove()
comment13.text=\n\ Returns\ a\ random\ valid\ move.\ If\ your\ agent\ doesn't\ know\ what\ to\ do,\ making\ a\ random\ move\n\ can\ allow\ the\ game\ to\ go\ on\ anyway.\n\ \n\ @return\ a\ random\ valid\ move.\n
comment14.params=numberInRow\ color
comment14.target=java.util.ArrayList\ xInRow(int,\ java.lang.String)
comment14.text=\ncollects\ a\ list\ of\ all\ of\ the\ columns\ that\ meet\ the\ criteria\ of\ a\ certain\ number\ of\ a\ color's\ tokens\ in\ a\ row\n@param\ number\ of\ tokens\ in\ a\ row\ searching\ for\n@param\ color\ of\ tokens\ in\ a\ row\ searching\ for\n@return\ all\ options\ of\ columns\ that\ have\ a\ certain\ number\ of\ red\ or\ yellow\ tokens\ next\ to\ that\ position\n
comment15.params=
comment15.target=java.lang.String\ getName()
comment15.text=\n\ Returns\ the\ name\ of\ this\ agent.\n\n\ @return\ the\ agent's\ name\n
comment2.params=columnDir\ rowDir\ column\ row
comment2.target=int\ getDistanceFromBorder(int,\ int,\ int,\ int)
comment2.text=\n\ get\ distance\ from\ border\ in\ specified\ direction\ from\ specified\ slot\ position\n\ @param\ column\ direction\n\ @param\ row\ direction\n\ @param\ column\ of\ slot\ \n\ @param\ row\ of\ slot\n\ @return\ distance\ from\ border\ in\ specified\ direction\ from\ specified\ slot\ position\n
comment3.params=column\ row
comment3.target=int\ getTopLeftDistanceFromBorder(int,\ int)
comment3.text=\n\ get\ the\ top\ left\ distance\ from\ border\n\ @param\ column\ position\ of\ top\ left\ position\n\ @param\ row\ position\ of\ top\ left\ position\n\ @return\ top\ left\ distance\ from\ border\n
comment4.params=column\ row
comment4.target=int\ getTopRightDistanceFromBorder(int,\ int)
comment4.text=\n\ get\ the\ top\ right\ distance\ from\ border\n\ @param\ column\ position\ of\ top\ right\ position\n\ @param\ row\ position\ of\ top\ right\ position\n\ @return\ top\ right\ distance\ from\ border\n
comment5.params=column\ row
comment5.target=int\ getBottomLeftDistanceFromBorder(int,\ int)
comment5.text=\n\ get\ bottom\ left\ distance\ from\ border\n\ @param\ column\ position\ of\ bottom\ left\ position\n\ @param\ row\ position\ of\ bottom\ left\ position\n\ @return\ bottom\ left\ distance\ from\ border\n
comment6.params=column\ row
comment6.target=int\ getBottomRightDistanceFromBorder(int,\ int)
comment6.text=\n\ get\ bottom\ right\ distance\ from\ border\n\ @param\ column\ position\ of\ bottom\ right\ position\n\ @param\ row\ position\ of\ bottom\ right\ position\n\ @return\ bottom\ right\ distance\ from\ border\n
comment7.params=column\ row
comment7.target=boolean\ hasSupport(int,\ int)
comment7.text=\n\ checks\ if\ specified\ slot\ have\ a\ filled\ spot\ undernath\ of\ it\ in\ order\ to\ place\ a\ token\ in\ the\ current\ slot\n\ @param\ column\ specified\n\ @param\ column\ specified\n\ @return\ if\ the\ specified\ slot\ has\ support\ unerneath\ of\ it\ in\ order\ to\ place\ a\ token\ in\ the\ current\ slot\n
comment8.params=numberOfMatches\ color\ column\ row\ columnDir\ rowDir
comment8.target=int\ numInARow(int,\ java.lang.String,\ int,\ int,\ int,\ int)
comment8.text=\n\ counts\ the\ number\ of\ red\ or\ yellow\ tokens\ in\ a\ row\ in\ a\ certain\ direction\n\ @param\ the\ number\ of\ consecutive\ red\ or\ yellow\ tokens\ you\ are\ looking\ for\n\ @param\ the\ color\ of\ consecutive\ tokens\ you\ are\ counting\ \n\ @param\ the\ column\ of\ slot\ you\ are\ counting\ consecutive\ tokens\ from\n\ @param\ the\ row\ of\ slot\ you\ are\ counting\ consecutive\ tokens\ from\n\ @param\ the\ column\ direction\ you\ are\ counting\ consecutive\ tokens\n\ @param\ the\ row\ direction\ you\ are\ counting\ consecutive\ tokens\n
comment9.params=game\ iAmRed
comment9.target=MyAgent(Connect4Game,\ boolean)
comment9.text=\n\ Constructs\ a\ new\ agent,\ giving\ it\ the\ game\ and\ telling\ it\ whether\ it\ is\ Red\ or\ Yellow.\n\ \n\ @param\ game\ The\ game\ the\ agent\ will\ be\ playing.\n\ @param\ iAmRed\ True\ if\ the\ agent\ is\ Red,\ False\ if\ the\ agent\ is\ Yellow.\n
numComments=16
